version: '3'

services:
  nginx:
    container_name: nginx
    build:
      context: ./requirements/nginx/
      dockerfile: Dockerfile
    restart: always
    volumes:
      - type: bind
        source: ~/data/wordpress
        target: /var/www/html
    depends_on:
      - wordpress
    networks:
      - inception-network
    ports:
      - 443:443
      - 80:80

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress/
      dockerfile: Dockerfile
    restart: always
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      WORDPRESS_VERSION: ${WORDPRESS_VERSION}
      WORDPRESS_TITLE: ${WORDPRESS_TITLE}
      WORDPRESS_ADMIN_USER: ${WORDPRESS_ADMIN_USER}
      WORDPRESS_ADMIN_PASSWORD: ${WORDPRESS_ADMIN_PASSWORD}
      WORDPRESS_ADMIN_EMAIL: ${WORDPRESS_ADMIN_EMAIL}
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DB_NAME}
    volumes:
      - type: bind
        source: ~/data/wordpress
        target: /var/www/html
    depends_on:
      - mariadb
    networks:
      - inception-network

  adminer:
    container_name: adminer
    build:
      context: ./requirements/bonus/adminer/
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mariadb
    networks:
      - inception-network
    ports:
      - 8080:8080

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb/
      dockerfile: Dockerfile
    restart: always
    environment:
      MYSQL_DB_NAME: "${MYSQL_DB_NAME}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
      - type: bind
        source: ~/data/mariadb
        target: /var/lib/mysql
    networks:
        - inception-network

networks:
  inception-network:
    name: inception-network
